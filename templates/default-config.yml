# CC-Supervisor 默认配置模板
# 此文件定义了验证系统的默认配置和规则

# 项目信息
project:
  name: "{{PROJECT_NAME}}"
  version: "{{VERSION}}"
  description: "CC-Supervisor AI双Claude验证系统"
  author: "{{AUTHOR}}"

# 验证设置
verification:
  # 是否启用自动验证
  enabled: true
  
  # 验证超时时间（秒）
  timeout: 30
  
  # 验证严格程度：strict（严格）、standard（标准）、lenient（宽松）
  level: "standard"
  
  # 启用的验证类型
  types:
    - syntax      # 语法检查
    - security    # 安全性检查  
    - quality     # 代码质量检查
    - logic       # 业务逻辑检查
    - performance # 性能检查
    - testing     # 测试覆盖检查

# 验证规则配置
rules:
  # JavaScript/TypeScript 规则
  javascript:
    # ESLint 检查
    eslint:
      enabled: true
      config: ".eslintrc.js"
    
    # Prettier 格式检查
    prettier:
      enabled: true
      config: ".prettierrc"
    
    # 具体规则
    no_console: "warning"        # console语句检查
    no_unused_vars: "error"       # 未使用变量
    no_debugger: "error"          # debugger语句
    max_complexity: 10            # 圈复杂度上限
    max_lines: 500                # 文件最大行数
    
  # Python 规则
  python:
    # Pylint 检查
    pylint:
      enabled: true
      config: ".pylintrc"
    
    # Black 格式化
    black:
      enabled: true
      line_length: 120
    
    # 具体规则
    max_line_length: 120
    min_docstring_length: 10
    
  # 通用规则
  general:
    # 文件大小限制
    max_file_size: "10MB"
    
    # 文件编码
    encoding: "UTF-8"
    
    # 行尾格式
    line_endings: "LF"
    
    # 缩进检查
    indent_style: "space"
    indent_size: 2

# 安全检查配置
security:
  # 扫描敏感信息
  scan_secrets:
    enabled: true
    patterns:
      - "api[_-]?key"
      - "api[_-]?secret"
      - "password"
      - "token"
      - "private[_-]?key"
      - "AWS_[A-Z_]+"
      
  # SQL注入检查
  sql_injection:
    enabled: true
    
  # XSS检查
  xss_check:
    enabled: true
    
  # 依赖漏洞扫描
  dependency_scan:
    enabled: true
    severity_threshold: "medium"

# 性能检查配置
performance:
  # 大O复杂度检查
  complexity_check:
    enabled: true
    max_time_complexity: "O(n^2)"
    max_space_complexity: "O(n)"
    
  # 循环嵌套深度
  max_loop_depth: 3
  
  # 函数调用深度
  max_call_stack: 10
  
  # 数据库查询优化
  database:
    warn_n_plus_1: true
    max_query_count: 50

# 测试配置
testing:
  # 最低测试覆盖率
  min_coverage:
    statements: 60
    branches: 50
    functions: 60
    lines: 60
    
  # 测试文件模式
  test_patterns:
    - "**/*.test.js"
    - "**/*.spec.js"
    - "**/*.test.ts"
    - "**/*.spec.ts"
    - "**/test_*.py"
    
  # 必需的测试类型
  required_tests:
    - unit        # 单元测试
    - integration # 集成测试

# 反馈设置
feedback:
  # 反馈格式：text、markdown、json
  format: "markdown"
  
  # 反馈详细程度：minimal、normal、verbose
  verbosity: "normal"
  
  # 是否包含修复建议
  include_suggestions: true
  
  # 是否包含代码示例
  include_examples: true
  
  # 是否包含参考链接
  include_references: true

# 日志设置
logging:
  # 日志级别：debug、info、warning、error
  level: "info"
  
  # 日志文件路径
  file: "logs/cc-supervisor/verification.log"
  
  # 是否输出到控制台
  console: true
  
  # 日志轮转
  rotation:
    enabled: true
    max_size: "10MB"
    max_files: 5
    compress: true

# 钩子配置
hooks:
  # 停止钩子（任务完成时）
  stop:
    enabled: true
    trigger_verification: true
    
  # 工具使用后钩子
  post_tool_use:
    enabled: true
    check_syntax: true
    
  # 用户提示提交钩子
  user_prompt_submit:
    enabled: true
    capture_intent: true

# 缓存设置
cache:
  enabled: true
  ttl: 3600              # 缓存时间（秒）
  max_size: "100MB"      # 最大缓存大小
  path: ".cache/cc-supervisor"

# 模板引擎设置
templates:
  # 启用的模板
  enabled_templates:
    - "basic-verification"      # 基础验证
    - "strict-review"          # 严格审查
    - "security-check"         # 安全检查
    - "performance-analysis"   # 性能分析
    - "test-coverage"          # 测试覆盖
    
  # 自定义变量
  variables:
    company: "{{COMPANY_NAME}}"
    team: "{{TEAM_NAME}}"
    environment: "{{ENV}}"

# 环境特定配置
environments:
  # 开发环境
  development:
    verification:
      level: "lenient"
      timeout: 60
    logging:
      level: "debug"
    testing:
      min_coverage:
        statements: 50
        
  # 测试环境
  staging:
    verification:
      level: "standard"
      timeout: 45
    logging:
      level: "info"
    testing:
      min_coverage:
        statements: 70
        
  # 生产环境
  production:
    verification:
      level: "strict"
      timeout: 30
    logging:
      level: "warning"
    security:
      scan_secrets:
        enabled: true
      dependency_scan:
        enabled: true
        severity_threshold: "high"

# 项目类型特定配置
project_types:
  # Node.js项目
  nodejs:
    package_manager: "npm"
    main_file: "index.js"
    test_command: "npm test"
    
  # Python项目
  python:
    package_manager: "pip"
    main_file: "main.py"
    test_command: "pytest"
    
  # React项目
  react:
    package_manager: "npm"
    main_file: "src/index.js"
    test_command: "npm test"
    build_command: "npm run build"
    
  # Vue项目
  vue:
    package_manager: "npm"
    main_file: "src/main.js"
    test_command: "npm test"
    build_command: "npm run build"

# 集成配置
integrations:
  # GitHub集成
  github:
    enabled: false
    create_issues: false
    comment_on_pr: false
    
  # Slack通知
  slack:
    enabled: false
    webhook_url: ""
    channels:
      - "#dev-notifications"
      
  # 邮件通知
  email:
    enabled: false
    smtp_server: ""
    recipients: []

# 元数据
metadata:
  config_version: "1.0.0"
  last_updated: "{{TIMESTAMP}}"
  compatible_versions:
    - "2.0.x"
    - "2.1.x"